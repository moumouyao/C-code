""filetype plugin indent on
" All system-wide defaults are set in $VIMRUNTIME/debian.vim and sourced by
" the call to :runtime you can find below.  If you wish to change any of those
" settings, you should do it in this file (/etc/vim/vimrc), since debian.vim
" will be overwritten everytime an upgrade of the vim packages is performed.
" It is recommended to make changes after sourcing debian.vim since it alters
" the value of the 'compatible' option.

" This line should not be removed as it ensures that various options are
" properly set to work with the Vim-related packages available in Debian.
runtime! debian.vim

" Uncomment the next line to make Vim more Vi-compatible
" NOTE: debian.vim sets 'nocompatible'.  Setting 'compatible' changes numerous
" options, so any other options should be set AFTER setting 'compatible'.
"set compatible

" Vim5 and later versions support syntax highlighting. Uncommenting the next
" line enables syntax highlighting by default.
if has("syntax")
  syntax on
endif


set mouse=a		" Enable mouse usage (all modes)
"set mouse=v
set nu!
set autoindent
set tabstop=4
set softtabstop=4 
set shiftwidth=4
set wildmenu
set wrap
exec "nohlsearch"

syntax on
set hlsearch
colorscheme desert
set nocompatible
set backspace=indent,eol,start



set ai!
set showmatch
set incsearch
set nohls
set ruler
set cursorline
set nobackup

autocmd InsertEnter * se cul    " 用浅色高亮当前行
set showcmd         " 输入的命令显示出来，看的清楚些 
set laststatus=1    " 启动显示状态行(1),总是显示状态行(2)  
set foldenable      " 允许折叠
set foldmethod=manual   " 手动折叠
"代码补全 
 
set completeopt=preview,menu
"自动保存
set autowrite
set ruler                   " 打开状态栏标尺
 
set cursorline              " 突出显示当前行
set magic                   " 设置魔术
" 语法高亮
set syntax=on
" 自动缩进
 
"set autoindent
 
set cindent

"搜索逐字符高亮
set hlsearch
set incsearch

" 高亮显示匹配的括号
set showmatch
" 匹配括号高亮的时间（单位是十分之一秒）
 
set matchtime=1
" 为C程序提供自动缩进
 
set smartindent

"自动补全
 
:inoremap ( ()<ESC>i
 
:inoremap ) <c-r>=ClosePair(')')<CR>
 
:inoremap { {}<ESC>i
 
:inoremap } <c-r>=ClosePair('}')<CR>
 
:inoremap [ []<ESC>i
 
:inoremap ] <c-r>=ClosePair(']')<CR>
 
:inoremap " ""<ESC>i
:inoremap ' ''<ESC>i
function! ClosePair(char)
    if getline('.')[col('.') - 1] == a:char
        return "\<Right>"
    else
        return a:char
    endif
endfunction
filetype plugin indent on 
      
      
"syntax on
" Source a global configuration file if available
if filereadable("/etc/vim/vimrc.local")
  source /etc/vim/vimrc.local
endif



""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"键盘命令"
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
nmap <leader>w :w!<cr>

nmap <leader>f :find<cr>
"映射全选+复制 ctrl+a
 map <C-A> ggVGY

 map! <C-A> <Esc>ggVGY

 map <F12> gg=G


"选中状态下 Ctrl+c 复制

 vmap <C-c> "+y

"去空行  
nnoremap <F2> :g/^\s*$/d<CR>
"比较文件  
nnoremap <C-F2> :vert diffsplit 

"新建标签  

map <M-F2> :tabnew<CR>  

"列出当前目录文件  

map <F3> :tabnew .<CR>  

"打开树状文件目录  

map <C-F3> \be  

"C，C++ 按F5编译运行
map <F5> :call CompileRunGcc()<CR>
""let mapleader=" "

map Q :q<CR>
map W :wq<CR>
map R :source $MYVIMRC<CR>
map S :w<CR>
map s :<nop>
map <C-n> :NERDTreeToggle<CR>
""noremap <LEADER><CR> :nohlsearch<CR




"插件安装
call plug#begin('~/.vim/plugged')

Plug 'vim-airline/vim-airline'
Plug 'preservim/nerdtree'

call plug#end()
